pip install python-dotenv
pip install django
pip install djangorestframework

https://compassionate-pasteur-020efe.netlify.app/

email: owerkop@o.pl
login: imię
hasło: typowe

http://localhost:8000/admin/
py manage.py runserver

http://127.0.0.1:8000/civil_calc/1/

https://medium.com/swlh/build-your-first-rest-api-with-django-rest-framework-e394e39a482c

https://dev.to/nobleobioma/create-a-simple-rest-api-with-django-253p


{
    "first_number": 1,
    "second_number": 2
}

od Lesia:

https://dev.to/brian101co/how-to-return-a-json-response-in-django-gen

https://medium.com/swlh/create-a-calculator-using-django-d2d5573dfe61

py -m venv moje_virtualne_srodowisko_nr1
py -m venv pynite_venv1

AKTYWACJA: moje_virtualne_srodowisko_nr1\Scripts\Activate
pynite_venv1\Scripts\Activate

DEAKTYWACJA: deactivate

UWAGA SECRET KEY:
https://stackoverflow.com/questions/15209978/where-to-store-secret-keys-django

utworzenie requairements:
pip freeze > requirements.txt

git push heroku HEAD:master


COORS setup:
https://www.geeksforgeeks.org/how-to-enable-cors-headers-in-your-django-project/

frontend and backend on one dyno/app in heroku:
https://stackoverflow.com/questions/36504768/deploy-the-backend-and-frontend-on-the-same-heroku-app-dyno

heroku config:set DISABLE_COLLECTSTATIC=1

authentication tokens:
https://www.youtube.com/watch?v=Wq6JqXqOzCE
https://www.youtube.com/watch?v=5JG5PyU1CXI&list=PLgCYzUzKIBE9Pi8wtx8g55fExDAPXBsbV&index=8

surce code for authentication tokens:
https://github.com/mitchtabian/CodingWithMitchBlog-REST-API/tree/Generating-Authentication-Tokens-(Django-Rest-framework-TokenAuthentication)/src

https://github.com/mitchtabian/CodingWithMitchBlog-REST-API/tree/Restricting-Access-with-Permissions-(Django-Rest-framework)/src


problem z aktualizacją SQL:
python manage.py makemigrations
No changes detected
(dj_venv2) PS C:\Python\git_projects\Django_civil> python manage.py migrate --run-syncdb

resticting acces git tutorial code:
https://github.com/mitchtabian/CodingWithMitchBlog-REST-API/tree/Restricting-Access-with-Permissions-(Django-Rest-framework)

uwaga do restrictions:
Hi, awesome tutorial, but in the case of the 'DEFAULT_PERMISSION_CLASSES', this sets global permissions to every view, so once you've put 
the 'IsAuthenticated' permission in it, you dont have to manually add it to all your views again like u were doing with the @permission_classes decorator.

py -m civil_calc.deep_backend.rect_double_reinf

wyjaśnienie serializerów:
https://www.youtube.com/watch?v=uzO2PW5jNMk&list=PLgCYzUzKIBE9Pi8wtx8g55fExDAPXBsbV&index=3
(one "rozpakowują i pakują dane do bazy danych - ale czemu standardowe django tego nie potrzebuje
- BO MA FORMULARZE, CO JEST TYM SAMYM")

Twoja obsługa userów przez api już jest odpowiedzią na twoje pytania:
1. model (mapuje tabele sql)
2. serilizer importuje model i definiuje

https://djangobook.com/django-tutorials/mastering-django-models/

json field:
https://www.tutorialspoint.com/adding-json-field-in-django-models

modele z konktami urzytkowników:
https://github.com/mitchtabian/CodingWithMitchBlog-REST-API/blob/master/src/blog/models.py

model blogu wyjaśniony:
https://www.youtube.com/watch?v=GcqURKYfv00&list=PLgCYzUzKIBE_dil025VAJnDjNZHHHR9mW&index=21
https://github.com/mitchtabian/CodingWithMitchBlog-REST-API/blob/master/src/blog/models.py

To create initial migrations for an app, run makemigrations and specify the app name. The migrations folder will be created.
./manage.py makemigrations <myapp>

Try deleting your migration file(s) and then rerun python manage.py makemigrations and python manage.py migrate afresh.

python manage.py migrate --fake <appname>

Reset the SQLite3 Database in Django

    Delete the db. sqlite3 file. ...
    Delete all the migrations folder inside all the Django applications.
    Make migrations for all the Django applications using the python manage.py makemigrations command. ...
    Lastly, migrate the migrations using this command: python manage.py migrate .
